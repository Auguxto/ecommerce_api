// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  admin      Boolean   @default(false)
  rg         String?
  cpf        String
  name       String
  email      String    @unique
  password   String
  telephone  String?
  newsletter Boolean   @default(false)
  birthday   DateTime
  adresses   Address[]
  cart       Cart?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Address {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  name       String
  cep        String
  road       String
  number     String
  complement String
  district   String
  city       String
  state      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id          String            @id @default(uuid())
  name        String
  brand       ProductBrand?     @relation(fields: [brand_id], references: [id])
  brand_id    String?
  inventory   ProductInventory?
  price       Float
  warranty    Int
  description String
  carts_item  CartItem[]
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt
}

model ProductInventory {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id String   @unique
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductBrand {
  id         String    @id @default(uuid())
  name       String    @unique
  products   Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Cart {
  id         String     @id @default(uuid())
  user       User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String     @unique
  products   CartItem[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model CartItem {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [product_id], references: [id])
  product_id String   @unique
  quantity   Int
  cart       Cart     @relation(fields: [cart_id], references: [id])
  cart_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
